name: API Test Ubuntu
on: 
  push:
    branches:
      - 'development-quarkus'
    path:
      - '**.java'
      - '**.sql'
      - '**/pom.xml'
  pull_request:
jobs:
  build-linux-amd64-kafka:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2    
      - name: Set up JDK 1.22
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'      
      - name: Build testserver
        run: |
          cd testserver
          docker build -t testserver .
      - name: docker-login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Get release number
        id: get-id
        run: |
          id=$(echo ${{github.ref_name}} | cut -d/ -f2)
          echo "::set-output name=id::$id"
      - name: Get build number
        id: get-build-id
        run: |
          cd BrokerParent
          id=$(mvn help:evaluate -Dexpression="project.version" -q -DforceStdout)
          echo "::set-output name=id::$id"
      - name: build-linux-amd64-with-kafka
        run: |
          mvn clean package -DskipTests -Dkafka -Pkafka -Dnative -Ddocker -Ddocker-tag=linux-amd64-kafka-${{steps.get-id.outputs.id}} -Dos=linux-amd64 -Dquarkus.profile=kafka -Dquarkus.native.container-build=true -Dquarkus.container-image.build=true -Dquarkus.docker.buildx.platform=linux/amd64 -Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-graalvmce-builder-image:22.3.2-java17-amd64
      - name: docker tag 
        run: |
          docker tag scorpiobroker/at-context-server:linux-amd64-kafka-${{steps.get-id.outputs.id}} scorpiobroker/at-context-server:linux-amd64-kafka-latest
          docker tag scorpiobroker/history-entity-manager:linux-amd64-kafka-${{steps.get-id.outputs.id}} scorpiobroker/history-entity-manager:linux-amd64-kafka-latest
          docker tag scorpiobroker/history-query-manager:linux-amd64-kafka-${{steps.get-id.outputs.id}} scorpiobroker/history-query-manager:linux-amd64-kafka-latest
          docker tag scorpiobroker/registry-subscription-manager:linux-amd64-kafka-${{steps.get-id.outputs.id}} scorpiobroker/registry-subscription-manager:linux-amd64-kafka-latest
          docker tag scorpiobroker/registry-manager:linux-amd64-kafka-${{steps.get-id.outputs.id}} scorpiobroker/registry-manager:linux-amd64-kafka-latest
          docker tag scorpiobroker/subscription-manager:linux-amd64-kafka-${{steps.get-id.outputs.id}} scorpiobroker/subscription-manager:linux-amd64-kafka-latest
          docker tag scorpiobroker/query-manager:linux-amd64-kafka-${{steps.get-id.outputs.id}} scorpiobroker/query-manager:linux-amd64-kafka-latest
          docker tag scorpiobroker/entity-manager:linux-amd64-kafka-${{steps.get-id.outputs.id}} scorpiobroker/entity-manager:linux-amd64-kafka-latest
          docker tag scorpiobroker/all-in-one-runner:linux-amd64-kafka-${{steps.get-id.outputs.id}} scorpiobroker/all-in-one-runner:linux-amd64-kafka-latest
      - name: start docker aaio 
        run: |
          docker compose -f ./compose-files/docker-compose-linux-amd64-aaio-kafka-test.yml up > dockerout.log &
          sleep 120
      - name: newman action
        uses: matt-ball/newman-action@master
        with:
          collection: api-test.json
          environment: api-test-aaio-environment.json
      - name: Stopping Scorpio 
        if: always()
        run: docker compose -f ./compose-files/docker-compose-linux-amd64-aaio-kafka-test.yml down
      - name: print log
        if: always()
        run: |
          cat dockerout.log
#      - name: start docker dist 
#        run: |
#          docker compose -f ./compose-files/docker-compose-ubuntu-dist-kafka-test.yml up &
#          sleep 120
#      - name: newman action
#        uses: matt-ball/newman-action@master
#        with:
#          collection: api-test.json
#          environment: api-test-dist-environment.json
#      - name: Stopping Scorpio 
#        run: docker compose -f ./compose-files/docker-compose-ubuntu-dist-kafka-test.yml down
  build-linux-amd64-mqtt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2  
      - name: Set up JDK 1.22
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'      
      - name: Build testserver
        run: |
          cd testserver
          docker build -t testserver .
      - name: docker-login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Get release number
        id: get-id
        run: |
          id=$(echo ${{github.ref_name}} | cut -d/ -f2)
          echo "::set-output name=id::$id"
      - name: Get build number
        id: get-build-id
        run: |
          cd BrokerParent
          id=$(mvn help:evaluate -Dexpression="project.version" -q -DforceStdout)
          echo "::set-output name=id::$id"
      - name: build-linux-amd64-with-mqtt
        run: |
          mvn clean package -DskipTests -Dmqtt -Pmqtt -Dnative -Ddocker -Ddocker-tag=linux-amd64-mqtt-${{steps.get-id.outputs.id}} -Dos=linux-amd64 -Dquarkus.profile=mqtt -Dquarkus.native.container-build=true -Dquarkus.container-image.build=true -Dquarkus.docker.buildx.platform=linux/amd64 -Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-graalvmce-builder-image:22.3.2-java17-amd64
      - name: docker tag 
        run: |
          docker tag scorpiobroker/at-context-server:linux-amd64-mqtt-${{steps.get-id.outputs.id}} scorpiobroker/at-context-server:linux-amd64-mqtt-latest
          docker tag scorpiobroker/history-entity-manager:linux-amd64-mqtt-${{steps.get-id.outputs.id}} scorpiobroker/history-entity-manager:linux-amd64-mqtt-latest
          docker tag scorpiobroker/history-query-manager:linux-amd64-mqtt-${{steps.get-id.outputs.id}} scorpiobroker/history-query-manager:linux-amd64-mqtt-latest
          docker tag scorpiobroker/registry-subscription-manager:linux-amd64-mqtt-${{steps.get-id.outputs.id}} scorpiobroker/registry-subscription-manager:linux-amd64-mqtt-latest
          docker tag scorpiobroker/registry-manager:linux-amd64-mqtt-${{steps.get-id.outputs.id}} scorpiobroker/registry-manager:linux-amd64-mqtt-latest
          docker tag scorpiobroker/subscription-manager:linux-amd64-mqtt-${{steps.get-id.outputs.id}} scorpiobroker/subscription-manager:linux-amd64-mqtt-latest
          docker tag scorpiobroker/query-manager:linux-amd64-mqtt-${{steps.get-id.outputs.id}} scorpiobroker/query-manager:linux-amd64-mqtt-latest
          docker tag scorpiobroker/entity-manager:linux-amd64-mqtt-${{steps.get-id.outputs.id}} scorpiobroker/entity-manager:linux-amd64-mqtt-latest
          docker tag scorpiobroker/all-in-one-runner:linux-amd64-mqtt-${{steps.get-id.outputs.id}} scorpiobroker/all-in-one-runner:linux-amd64-mqtt-latest
      - name: start docker aaio 
        run: |
          docker compose -f ./compose-files/docker-compose-linux-amd64-aaio-mqtt-test.yml up > dockerout.log &
          sleep 120
#      - name: newman action
#        uses: matt-ball/newman-action@master
#        with:
#          collection: api-test.json
#          environment: api-test-aaio-environment.json
      - name: Stopping Scorpio 
        if: always()
        run: docker compose -f ./compose-files/docker-compose-linux-amd64-aaio-mqtt-test.yml down
      - name: print log
        if: always()
        run: |
          cat dockerout.log
  build-linux-amd64-rabbitmq:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2   
      - name: Set up JDK 1.22
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'      
      - name: Build testserver
        run: |
          cd testserver
          docker build -t testserver .
      - name: docker-login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Get release number
        id: get-id
        run: |
          id=$(echo ${{github.ref_name}} | cut -d/ -f2)
          echo "::set-output name=id::$id"
      - name: Get build number
        id: get-build-id
        run: |
          cd BrokerParent
          id=$(mvn help:evaluate -Dexpression="project.version" -q -DforceStdout)
          echo "::set-output name=id::$id"
      - name: build-linux-amd64-with-rabbitmq
        run: |
          mvn clean package -DskipTests -Drabbitmq -Prabbitmq -Dnative -Ddocker -Ddocker-tag=linux-amd64-rabbitmq-${{steps.get-id.outputs.id}} -Dos=linux-amd64 -Dquarkus.profile=rabbitmq -Dquarkus.native.container-build=true -Dquarkus.container-image.build=true -Dquarkus.docker.buildx.platform=linux/amd64 -Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-graalvmce-builder-image:22.3.2-java17-amd64
      - name: docker tag 
        run: |
          docker tag scorpiobroker/at-context-server:linux-amd64-rabbitmq-${{steps.get-id.outputs.id}} scorpiobroker/at-context-server:linux-amd64-rabbitmq-latest
          docker tag scorpiobroker/history-entity-manager:linux-amd64-rabbitmq-${{steps.get-id.outputs.id}} scorpiobroker/history-entity-manager:linux-amd64-rabbitmq-latest
          docker tag scorpiobroker/history-query-manager:linux-amd64-rabbitmq-${{steps.get-id.outputs.id}} scorpiobroker/history-query-manager:linux-amd64-rabbitmq-latest
          docker tag scorpiobroker/registry-subscription-manager:linux-amd64-rabbitmq-${{steps.get-id.outputs.id}} scorpiobroker/registry-subscription-manager:linux-amd64-rabbitmq-latest
          docker tag scorpiobroker/registry-manager:linux-amd64-rabbitmq-${{steps.get-id.outputs.id}} scorpiobroker/registry-manager:linux-amd64-rabbitmq-latest
          docker tag scorpiobroker/subscription-manager:linux-amd64-rabbitmq-${{steps.get-id.outputs.id}} scorpiobroker/subscription-manager:linux-amd64-rabbitmq-latest
          docker tag scorpiobroker/query-manager:linux-amd64-rabbitmq-${{steps.get-id.outputs.id}} scorpiobroker/query-manager:linux-amd64-rabbitmq-latest
          docker tag scorpiobroker/entity-manager:linux-amd64-rabbitmq-${{steps.get-id.outputs.id}} scorpiobroker/entity-manager:linux-amd64-rabbitmq-latest
          docker tag scorpiobroker/all-in-one-runner:linux-amd64-rabbitmq-${{steps.get-id.outputs.id}} scorpiobroker/all-in-one-runner:linux-amd64-rabbitmq-latest
      - name: start docker aaio 
        run: |
          docker compose -f ./compose-files/docker-compose-linux-amd64-aaio-rabbitmq-test.yml up > dockerout.log &
          sleep 120
      - name: newman action
        uses: matt-ball/newman-action@master
        with:
          collection: api-test.json
          environment: api-test-aaio-environment.json
      - name: Stopping Scorpio 
        if: always()
        run: docker compose -f ./compose-files/docker-compose-linux-amd64-aaio-rabbitmq-test.yml down
      - name: print log
        if: always()
        run: |
          cat dockerout.log
  build-linux-amd64-aaio:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2  
      - name: Set up JDK 1.22
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'      
      - name: docker-login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build testserver
        run: |
          cd testserver
          docker build -t testserver .
      - name: Get release number
        id: get-id
        run: |
          id=$(echo ${{github.ref_name}} | cut -d/ -f2)
          echo "::set-output name=id::$id"
      - name: build-ubuntu
        run: |
          mvn clean package -DskipTests -Din-memory -Pin-memory -Ddocker -Dnative -Ddocker-tag=linx-amd64-${{steps.get-id.outputs.id}} -Dos=ubuntu -Dquarkus.profile=in-memory -Dquarkus.native.container-build=true -Dquarkus.container-image.build=true -Dquarkus.docker.buildx.platform=linux/amd64 -Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-graalvmce-builder-image:22.3.2-java17-amd64
      - name: docker tag
        run: |
          docker tag scorpiobroker/all-in-one-runner:linux-amd64-${{steps.get-id.outputs.id}} scorpiobroker/all-in-one-runner:linux-amd64-latest
      - name: start docker aaio 
        run: |
          docker compose -f ./compose-files/docker-compose-linux-amd64-aaio-test.yml up > dockerout.log &
          sleep 120
      - name: newman action
        uses: matt-ball/newman-action@master
        with:
          collection: api-test.json
          environment: api-test-aaio-environment.json
      - name: Stopping Scorpio 
        if: always()
        run: docker compose -f ./compose-files/docker-compose-linux-amd64-aaio-test.yml down 
      - name: print log
        if: always()
        run: |
          cat dockerout.log
