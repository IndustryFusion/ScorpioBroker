version: "3.5"

volumes:
  ? mongo_data
  ? mqtt_data

services:
  mongodb:
    ports:
      - "27017:27017"
    hostname: mongodb
    image: mongo:4
    stdin_open: true
    tty: true
    volumes:
      - mongo_data:/data/db

  mqtt:
    image: eclipse-mosquitto
    hostname: mqtt
    volumes:
      - ./mosquitto/config:/mosquitto/config:rw
      - mqtt_data:/mosquitto/data/:rw
    ports:
      - 1883:1883
      - 9001:9001

#################### Scorpio-Broker ####################

  zookeeper:
    image: zookeeper
    ports:
      - "2181"
  kafka:
    image: bitnami/kafka
    ports:
      - "9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_LOG_RETENTION_MS: 10000
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 5000
      ALLOW_PLAINTEXT_LISTENER: "yes"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
  postgres:
    image: postgis/postgis
    ports:
      - "5432"
    environment:
      POSTGRES_USER: ngb
      POSTGRES_PASSWORD: ngb
      POSTGRES_DB: ngb
  scorpio:
    image: scorpiobroker/all-in-one-runner:java-kafka-latest
    hostname: scorpio
    platform: linux/amd64
    ports:
      - "9090:9090"
    environment:
      DBHOST: postgres
      BUSHOST: kafka
    depends_on:
      - postgres
      - kafka
    stdin_open: true
    tty: true

#################### LoRaWAN IoT-Agent ####################

  iotagent-lora:
    platform: linux/amd64
    depends_on:
      - mongodb
      - scorpio
      - mqtt
    entrypoint: bin/iotagent-lora docker/config-docker.js
    hostname: iotagent-lora
    image: ioeari/iotagent-lora
    ports:
      - "4041:4041"
    environment:
      - "IOTA_CB_HOST=scorpio"
      - "IOTA_CB_PORT=9090"
      - "IOTA_CB_NGSI_VERSION=ld"
      - "IOTA_JSON_LD_CONTEXT=https://uri.etsi.org/ngsi-ld/v1/ngsi-ld-core-context-v1.7.jsonld"
    stdin_open: true
    tty: true
