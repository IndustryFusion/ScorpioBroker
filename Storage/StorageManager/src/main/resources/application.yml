spring:
  application:
    name: storage-manager
  main:
    lazy-initialization: true
  cloud:
    stream:
      kafka:
        binder:
          brokers: ${KAFKA_BROKERS}:${KAFKA_PORT}      #edited
  flyway:
    baselineOnMigrate: true    
server:
  port: 1029

max:
  request:
    size: 104857600
bootstrap:
  servers: ${KAFKA_BOOTSTRAP}:${KAFKA_PORT}         #edited
query:
  topic: QUERY
  result:
    topic: QUERY_RESULT
entity:
  topic: ENTITY
  keyValues:
    topic: KVENTITY
  withoutSysAttrs:
    topic: ENTITY_WITHOUT_SYSATTRS
  stopListenerIfDbFails: false
  temporal:
    topic: TEMPORALENTITY
    stopListenerIfDbFails: false
csource:
  topic: CONTEXT_SOURCE
  stopListenerIfDbFails: false


reader:
  enabled: true
  datasource:
    url: "jdbc:postgresql://localhost:5432/ngb?ApplicationName=ngb_storagemanager_reader"
    username: ngb
    password: ngb
    hikari:
      minimumIdle: 5
      maximumPoolSize: 20
      idleTimeout: 30000
      poolName: SpringBootHikariCP_Reader
      maxLifetime: 2000000
      connectionTimeout: 30000

writer:
  enabled: true
  datasource:
    url: "jdbc:postgresql://localhost:5432/ngb?ApplicationName=ngb_storagemanager_writer"
    username: ngb
    password: ngb
    hikari:
      minimumIdle: 5
      maximumPoolSize: 20
      idleTimeout: 30000
      poolName: SpringBootHikariCP_Writer
      maxLifetime: 2000000
      connectionTimeout: 30000
