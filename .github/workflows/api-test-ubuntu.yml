name: API Test Ubuntu
on: 
  push:
    branches:
      - 'development-quarkus'
    path:
      - '**.java'
      - '**.sql'
      - '**/pom.xml'
  pull_request:
jobs:
  build-ubuntu-kafka:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2     
      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17' # for a specific JDK 17; or '17' for the latest JDK 17
          distribution: 'mandrel'
          version: 'mandrel-23.0.1.2-Final'
      - name: Build testserver
        run: |
          cd testserver
          docker build -t testserver .
      - name: docker-login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Get release number
        id: get-id
        run: |
          id=$(echo ${{github.ref_name}} | cut -d/ -f2)
          echo "::set-output name=id::$id"
      - name: Get build number
        id: get-build-id
        run: |
          cd BrokerParent
          id=$(mvn help:evaluate -Dexpression="project.version" -q -DforceStdout)
          echo "::set-output name=id::$id"
      - name: build-ubuntu-with-kafka
        run: |
          mvn clean package -DskipTests -Dkafka -Pkafka -Dnative -Ddocker -Ddocker-tag=ubuntu-kafka-${{steps.get-id.outputs.id}} -Dos=ubuntu -Dquarkus.profile=kafka
      - name: docker tag 
        run: |
          docker tag scorpiobroker/at-context-server:ubuntu-kafka-${{steps.get-id.outputs.id}} scorpiobroker/at-context-server:ubuntu-kafka-latest
          docker tag scorpiobroker/history-entity-manager:ubuntu-kafka-${{steps.get-id.outputs.id}} scorpiobroker/history-entity-manager:ubuntu-kafka-latest
          docker tag scorpiobroker/history-query-manager:ubuntu-kafka-${{steps.get-id.outputs.id}} scorpiobroker/history-query-manager:ubuntu-kafka-latest
          docker tag scorpiobroker/registry-subscription-manager:ubuntu-kafka-${{steps.get-id.outputs.id}} scorpiobroker/registry-subscription-manager:ubuntu-kafka-latest
          docker tag scorpiobroker/registry-manager:ubuntu-kafka-${{steps.get-id.outputs.id}} scorpiobroker/registry-manager:ubuntu-kafka-latest
          docker tag scorpiobroker/subscription-manager:ubuntu-kafka-${{steps.get-id.outputs.id}} scorpiobroker/subscription-manager:ubuntu-kafka-latest
          docker tag scorpiobroker/query-manager:ubuntu-kafka-${{steps.get-id.outputs.id}} scorpiobroker/query-manager:ubuntu-kafka-latest
          docker tag scorpiobroker/entity-manager:ubuntu-kafka-${{steps.get-id.outputs.id}} scorpiobroker/entity-manager:ubuntu-kafka-latest
          docker tag scorpiobroker/all-in-one-runner:ubuntu-kafka-${{steps.get-id.outputs.id}} scorpiobroker/all-in-one-runner:ubuntu-kafka-latest
      - name: start docker aaio 
        run: |
          docker compose -f ./compose-files/docker-compose-ubuntu-aaio-kafka-test.yml up > dockerout.log &
          sleep 120
      - name: newman action
        uses: matt-ball/newman-action@master
        with:
          collection: api-test.json
          environment: api-test-aaio-environment.json
      - name: Stopping Scorpio 
        if: always()
        run: docker compose -f ./compose-files/docker-compose-ubuntu-aaio-kafka-test.yml down
      - name: print log
        if: always()
        run: |
          cat dockerout.log
#      - name: start docker dist 
#        run: |
#          docker compose -f ./compose-files/docker-compose-ubuntu-dist-kafka-test.yml up &
#          sleep 120
#      - name: newman action
#        uses: matt-ball/newman-action@master
#        with:
#          collection: api-test.json
#          environment: api-test-dist-environment.json
#      - name: Stopping Scorpio 
#        run: docker compose -f ./compose-files/docker-compose-ubuntu-dist-kafka-test.yml down
  build-ubuntu-mqtt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2     
      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17' # for a specific JDK 17; or '17' for the latest JDK 17
          distribution: 'mandrel'
          version: 'mandrel-23.0.1.2-Final'
      - name: Build testserver
        run: |
          cd testserver
          docker build -t testserver .
      - name: docker-login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Get release number
        id: get-id
        run: |
          id=$(echo ${{github.ref_name}} | cut -d/ -f2)
          echo "::set-output name=id::$id"
      - name: Get build number
        id: get-build-id
        run: |
          cd BrokerParent
          id=$(mvn help:evaluate -Dexpression="project.version" -q -DforceStdout)
          echo "::set-output name=id::$id"
      - name: build-ubuntu-with-mqtt
        run: |
          mvn clean package -DskipTests -Dmqtt -Pmqtt -Dnative -Ddocker -Ddocker-tag=ubuntu-mqtt-${{steps.get-id.outputs.id}} -Dos=ubuntu -Dquarkus.profile=mqtt
      - name: docker tag 
        run: |
          docker tag scorpiobroker/at-context-server:ubuntu-mqtt-${{steps.get-id.outputs.id}} scorpiobroker/at-context-server:ubuntu-mqtt-latest
          docker tag scorpiobroker/history-entity-manager:ubuntu-mqtt-${{steps.get-id.outputs.id}} scorpiobroker/history-entity-manager:ubuntu-mqtt-latest
          docker tag scorpiobroker/history-query-manager:ubuntu-mqtt-${{steps.get-id.outputs.id}} scorpiobroker/history-query-manager:ubuntu-mqtt-latest
          docker tag scorpiobroker/registry-subscription-manager:ubuntu-mqtt-${{steps.get-id.outputs.id}} scorpiobroker/registry-subscription-manager:ubuntu-mqtt-latest
          docker tag scorpiobroker/registry-manager:ubuntu-mqtt-${{steps.get-id.outputs.id}} scorpiobroker/registry-manager:ubuntu-mqtt-latest
          docker tag scorpiobroker/subscription-manager:ubuntu-mqtt-${{steps.get-id.outputs.id}} scorpiobroker/subscription-manager:ubuntu-mqtt-latest
          docker tag scorpiobroker/query-manager:ubuntu-mqtt-${{steps.get-id.outputs.id}} scorpiobroker/query-manager:ubuntu-mqtt-latest
          docker tag scorpiobroker/entity-manager:ubuntu-mqtt-${{steps.get-id.outputs.id}} scorpiobroker/entity-manager:ubuntu-mqtt-latest
          docker tag scorpiobroker/all-in-one-runner:ubuntu-mqtt-${{steps.get-id.outputs.id}} scorpiobroker/all-in-one-runner:ubuntu-mqtt-latest
      - name: start docker aaio 
        run: |
          docker compose -f ./compose-files/docker-compose-ubuntu-aaio-mqtt-test.yml up > dockerout.log &
          sleep 120
#      - name: newman action
#        uses: matt-ball/newman-action@master
#        with:
#          collection: api-test.json
#          environment: api-test-aaio-environment.json
      - name: Stopping Scorpio 
        if: always()
        run: docker compose -f ./compose-files/docker-compose-ubuntu-aaio-mqtt-test.yml down
      - name: print log
        if: always()
        run: |
          cat dockerout.log
  build-ubuntu-rabbitmq:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2     
      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17' # for a specific JDK 17; or '17' for the latest JDK 17
          distribution: 'mandrel'
          version: 'mandrel-23.0.1.2-Final'
      - name: Build testserver
        run: |
          cd testserver
          docker build -t testserver .
      - name: docker-login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Get release number
        id: get-id
        run: |
          id=$(echo ${{github.ref_name}} | cut -d/ -f2)
          echo "::set-output name=id::$id"
      - name: Get build number
        id: get-build-id
        run: |
          cd BrokerParent
          id=$(mvn help:evaluate -Dexpression="project.version" -q -DforceStdout)
          echo "::set-output name=id::$id"
      - name: build-ubuntu-with-rabbitmq
        run: |
          mvn clean package -DskipTests -Drabbitmq -Prabbitmq -Dnative -Ddocker -Ddocker-tag=ubuntu-rabbitmq-${{steps.get-id.outputs.id}} -Dos=ubuntu -Dquarkus.profile=rabbitmq
      - name: docker tag 
        run: |
          docker tag scorpiobroker/at-context-server:ubuntu-rabbitmq-${{steps.get-id.outputs.id}} scorpiobroker/at-context-server:ubuntu-rabbitmq-latest
          docker tag scorpiobroker/history-entity-manager:ubuntu-rabbitmq-${{steps.get-id.outputs.id}} scorpiobroker/history-entity-manager:ubuntu-rabbitmq-latest
          docker tag scorpiobroker/history-query-manager:ubuntu-rabbitmq-${{steps.get-id.outputs.id}} scorpiobroker/history-query-manager:ubuntu-rabbitmq-latest
          docker tag scorpiobroker/registry-subscription-manager:ubuntu-rabbitmq-${{steps.get-id.outputs.id}} scorpiobroker/registry-subscription-manager:ubuntu-rabbitmq-latest
          docker tag scorpiobroker/registry-manager:ubuntu-rabbitmq-${{steps.get-id.outputs.id}} scorpiobroker/registry-manager:ubuntu-rabbitmq-latest
          docker tag scorpiobroker/subscription-manager:ubuntu-rabbitmq-${{steps.get-id.outputs.id}} scorpiobroker/subscription-manager:ubuntu-rabbitmq-latest
          docker tag scorpiobroker/query-manager:ubuntu-rabbitmq-${{steps.get-id.outputs.id}} scorpiobroker/query-manager:ubuntu-rabbitmq-latest
          docker tag scorpiobroker/entity-manager:ubuntu-rabbitmq-${{steps.get-id.outputs.id}} scorpiobroker/entity-manager:ubuntu-rabbitmq-latest
          docker tag scorpiobroker/all-in-one-runner:ubuntu-rabbitmq-${{steps.get-id.outputs.id}} scorpiobroker/all-in-one-runner:ubuntu-rabbitmq-latest
      - name: start docker aaio 
        run: |
          docker compose -f ./compose-files/docker-compose-ubuntu-aaio-rabbitmq-test.yml up > dockerout.log &
          sleep 120
      - name: newman action
        uses: matt-ball/newman-action@master
        with:
          collection: api-test.json
          environment: api-test-aaio-environment.json
      - name: Stopping Scorpio 
        if: always()
        run: docker compose -f ./compose-files/docker-compose-ubuntu-aaio-rabbitmq-test.yml down
      - name: print log
        if: always()
        run: |
          cat dockerout.log
  build-ubuntu-aaio:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2     
      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17' # for a specific JDK 17; or '17' for the latest JDK 17
          distribution: 'mandrel'
          version: 'mandrel-23.0.1.2-Final'
      - name: docker-login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build testserver
        run: |
          cd testserver
          docker build -t testserver .
      - name: Get release number
        id: get-id
        run: |
          id=$(echo ${{github.ref_name}} | cut -d/ -f2)
          echo "::set-output name=id::$id"
      - name: build-ubuntu
        run: |
          mvn clean package -DskipTests -Din-memory -Pin-memory -Ddocker -Dnative -Ddocker-tag=ubuntu-${{steps.get-id.outputs.id}} -Dos=ubuntu -Dquarkus.profile=in-memory
      - name: docker tag
        run: |
          docker tag scorpiobroker/all-in-one-runner:ubuntu-${{steps.get-id.outputs.id}} scorpiobroker/all-in-one-runner:ubuntu-latest
      - name: start docker aaio 
        run: |
          docker compose -f ./compose-files/docker-compose-ubuntu-aaio-test.yml up > dockerout.log &
          sleep 120
      - name: newman action
        uses: matt-ball/newman-action@master
        with:
          collection: api-test.json
          environment: api-test-aaio-environment.json
      - name: Stopping Scorpio 
        if: always()
        run: docker compose -f ./compose-files/docker-compose-ubuntu-aaio-test.yml down 
      - name: print log
        if: always()
        run: |
          cat dockerout.log
