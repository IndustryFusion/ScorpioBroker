NAME: scorpio
LAST DEPLOYED: Wed Nov 24 07:36:48 2021
NAMESPACE: default
STATUS: pending-install
REVISION: 1
TEST SUITE: None
USER-SUPPLIED VALUES:
{}

COMPUTED VALUES:
AtContextServer:
  enabled: true
  hpa:
    enabled: true
    maxReplicas: 5
    minReplicas: 1
    targetCPUUtilizationPercentage: 80
  image:
    pullPolicy: Always
    repository: ibn40/digitaltwin
    tag: AtContextServer_2.0.0-v2
  kafka_vars: true
  name: at-context-server
  readinessProbe:
    enabled: true
    failureThreshold: 6
    initialDelaySeconds: 40
    periodSeconds: 10
  replicas: 1
  resources: {}
  restartPolicy: Always
  securityContext: {}
  serviceAccount:
    enabled: false
    name: ""
  terminationGracePeriodSeconds: 30
ConfigServer:
  enabled: true
  hpa:
    enabled: true
    maxReplicas: 5
    minReplicas: 1
    targetCPUUtilizationPercentage: 80
  image:
    pullPolicy: Always
    repository: ibn40/digitaltwin
    tag: config-server_2.0.0-v2
  name: config-server
  readinessProbe:
    enabled: true
    failureThreshold: 6
    initialDelaySeconds: 40
    periodSeconds: 10
  replicas: 1
  resources: {}
  restartPolicy: Always
  securityContext: {}
  serviceAccount:
    enabled: false
    name: ""
  terminationGracePeriodSeconds: 30
EntityManager:
  enabled: true
  hpa:
    enabled: true
    maxReplicas: 5
    minReplicas: 1
    targetCPUUtilizationPercentage: 80
  image:
    pullPolicy: Always
    repository: ibn40/digitaltwin
    tag: EntityManager_2.0.0-v2
  kafka_vars: true
  name: entity-manager
  readinessProbe:
    enabled: true
    failureThreshold: 6
    initialDelaySeconds: 40
    periodSeconds: 10
  replicas: 1
  resources: {}
  restartPolicy: Always
  securityContext: {}
  serviceAccount:
    enabled: false
    name: ""
  terminationGracePeriodSeconds: 30
HistoryManager:
  enabled: true
  hpa:
    enabled: true
    maxReplicas: 5
    minReplicas: 1
    targetCPUUtilizationPercentage: 80
  image:
    pullPolicy: Always
    repository: ibn40/digitaltwin
    tag: HistoryManager_2.0.0-v2
  kafka_vars: true
  name: history-manager
  readinessProbe:
    enabled: true
    failureThreshold: 6
    initialDelaySeconds: 40
    periodSeconds: 10
  replicas: 1
  resources: {}
  restartPolicy: Always
  securityContext: {}
  serviceAccount:
    enabled: false
    name: ""
  terminationGracePeriodSeconds: 30
QueryManager:
  enabled: true
  hpa:
    enabled: true
    maxReplicas: 5
    minReplicas: 1
    targetCPUUtilizationPercentage: 80
  image:
    pullPolicy: Always
    repository: ibn40/digitaltwin
    tag: QueryManager_2.0.0-v2
  kafka_vars: true
  name: query-manager
  readinessProbe:
    enabled: true
    failureThreshold: 6
    initialDelaySeconds: 40
    periodSeconds: 10
  replicas: 1
  resources: {}
  restartPolicy: Always
  securityContext: {}
  serviceAccount:
    enabled: false
    name: ""
  terminationGracePeriodSeconds: 30
RegistryManager:
  enabled: true
  hpa:
    enabled: true
    maxReplicas: 5
    minReplicas: 1
    targetCPUUtilizationPercentage: 80
  image:
    pullPolicy: Always
    repository: ibn40/digitaltwin
    tag: RegistryManager_2.0.0-v2
  kafka_vars: true
  name: registry-manager
  readinessProbe:
    enabled: true
    failureThreshold: 6
    initialDelaySeconds: 40
    periodSeconds: 10
  replicas: 1
  resources: {}
  restartPolicy: Always
  securityContext: {}
  serviceAccount:
    enabled: false
    name: ""
  terminationGracePeriodSeconds: 30
StorageManager:
  enabled: true
  hpa:
    enabled: true
    maxReplicas: 5
    minReplicas: 1
    targetCPUUtilizationPercentage: 80
  image:
    pullPolicy: Always
    repository: ibn40/digitaltwin
    tag: StorageManager_2.0.0-v2
  kafka_vars: true
  name: storage-manager
  readinessProbe:
    enabled: true
    failureThreshold: 6
    initialDelaySeconds: 40
    periodSeconds: 10
  replicas: 1
  resources: {}
  restartPolicy: Always
  securityContext: {}
  serviceAccount:
    enabled: false
    name: ""
  terminationGracePeriodSeconds: 30
SubscriptionManager:
  enabled: true
  hpa:
    enabled: true
    maxReplicas: 5
    minReplicas: 1
    targetCPUUtilizationPercentage: 80
  image:
    pullPolicy: Always
    repository: ibn40/digitaltwin
    tag: SubscriptionManager_2.0.0-v2
  kafka_vars: true
  name: subscription-manager
  readinessProbe:
    enabled: true
    failureThreshold: 6
    initialDelaySeconds: 40
    periodSeconds: 10
  replicas: 1
  resources: {}
  restartPolicy: Always
  securityContext: {}
  serviceAccount:
    enabled: false
    name: ""
  terminationGracePeriodSeconds: 30
eureka:
  enabled: true
  hpa:
    enabled: true
    maxReplicas: 5
    minReplicas: 1
    targetCPUUtilizationPercentage: 80
  image:
    pullPolicy: Always
    repository: ibn40/digitaltwin
    tag: eureka-server_2.0.0-v2
  name: eureka
  readinessProbe:
    enabled: true
    failureThreshold: 6
    initialDelaySeconds: 40
    periodSeconds: 10
  replicas: 1
  resources: {}
  restartPolicy: Always
  securityContext: {}
  serviceAccount:
    enabled: false
    name: ""
  terminationGracePeriodSeconds: 30
gateway:
  enabled: true
  hpa:
    enabled: true
    maxReplicas: 5
    minReplicas: 1
    targetCPUUtilizationPercentage: 80
  image:
    pullPolicy: Always
    repository: ibn40/digitaltwin
    tag: gateway_2.0.0-v2
  name: gateway
  readinessProbe:
    enabled: true
    failureThreshold: 6
    initialDelaySeconds: 40
    periodSeconds: 10
  replicas: 1
  resources: {}
  restartPolicy: Always
  securityContext: {}
  serviceAccount:
    enabled: false
    name: ""
  terminationGracePeriodSeconds: 30
imageCredentials:
  name: ibn40-fusionreadonly
  password: IndustryFusion4.0!
  registry: https://index.docker.io/v1/
  username: fusionreadonly
kafka:
  enabled: false
kafka_vars:
  KAFKA_ADVERTISED_HOST_NAME: kafka.kafka
  KAFKA_ADVERTISED_PORT: 9092
  KAFKA_BOOTSTRAP: kafka.kafka
  KAFKA_BROKERS: kafka.kafka
  KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 5000
  KAFKA_LOG_RETENTION_MS: 10000
  KAFKA_PORT: 9092
  KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
namespace: scorpio-test
postgres:
  enabled: true
springArgs:
  overrideSpringArgs: false
  value: ""
zookeeper:
  enabled: false

HOOKS:
MANIFEST:
---
# Source: scorpioBroker/templates/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: scorpio-test
---
# Source: scorpioBroker/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: ibn40-fusionreadonly
  namespace: scorpio-test
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOnsiYXV0aCI6IlpuVnphVzl1Y21WaFpHOXViSGs2U1c1a2RYTjBjbmxHZFhOcGIyNDBMakFoIn19fQ==
---
# Source: scorpioBroker/templates/postgres-storage.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv-volume-2
  labels:
    type: local
    app: postgres
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/db"
---
# Source: scorpioBroker/templates/postgres-storage.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pv-claim
  namespace: scorpio-test
  labels:
    app: postgres
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
# Source: scorpioBroker/templates/atcontext-server-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    service: at-context-server
  name: at-context-server
  namespace: scorpio-test
spec:
  ports:
  - name: "27015"
    port: 27015
    targetPort: 27015
  selector:
    service: at-context-server
status: {}
---
# Source: scorpioBroker/templates/config-server-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    service: config-server
  name: config-server
  namespace: scorpio-test
spec:
  ports:
  - name: "8888"
    port: 8888
    targetPort: 8888
  selector:
    service: config-server
status: {}
---
# Source: scorpioBroker/templates/entity-manager-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    service: entity-manager
  name: entity-manager
  namespace: scorpio-test
spec:
  ports:
  - name: "1025"
    port: 1025
    targetPort: 1025
  selector:
    service: entity-manager
status: {}
---
# Source: scorpioBroker/templates/eureka-node-port.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    service: eureka
  name: eureka-node-port
  namespace: scorpio-test
spec:
  type: NodePort
  ports:
  - port: 8761
    targetPort: 8761
    nodePort : 30000
  selector:
    service: eureka
---
# Source: scorpioBroker/templates/eureka-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    service: eureka
  name: eureka
  namespace: scorpio-test
spec:
  ports:
  - name: "8761"
    port: 8761
    targetPort: 8761
  selector:
    service: eureka
status: {}
---
# Source: scorpioBroker/templates/gateway-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    service: gateway
  name: gateway
  namespace: scorpio-test
spec:
  ports:
  - name: "9090"
    port: 9090
    targetPort: 9090
  selector:
    service: gateway
status: {}
---
# Source: scorpioBroker/templates/history-manager-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    service: history-manager
  name: history-manager
  namespace: scorpio-test
spec:
  ports:
  - name: "1040"
    port: 1040
    targetPort: 1040
  selector:
    service: history-manager
status: {}
---
# Source: scorpioBroker/templates/postgres-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
      service: postgres
  name: postgres
  namespace: scorpio-test
spec:
  ports:
  - name: "5432"
    port: 5432
    targetPort: 5432
  selector:
      service: postgres
status:
  loadBalancer: {}
---
# Source: scorpioBroker/templates/query-manager-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    service: query-manager
  name: query-manager
  namespace: scorpio-test
spec:
  ports:
  - name: "1026"
    port: 1026
    targetPort: 1026
  selector:
    service: query-manager
status: {}
---
# Source: scorpioBroker/templates/registration-manager-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    service: registry-manager
  name: registry-manager
  namespace: scorpio-test
spec:
  ports:
  - name: "1030"
    port: 1030
    targetPort: 1030
  selector:
    service: registry-manager
status: {}
---
# Source: scorpioBroker/templates/scorpio-gateway-node-port-svc.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    service: gateway
  name: scorpio-gateway-node-port
  namespace: scorpio-test
spec:
  type: NodePort
  ports:
  - port: 9090
    targetPort: 9090
    nodePort : 30001
  selector:
    service: gateway
---
# Source: scorpioBroker/templates/storage-manager-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    service: storage-manager
  name: storage-manager
  namespace: scorpio-test
spec:
  ports:
  - name: "1029"
    port: 1029
    targetPort: 1029
  selector:
    service: storage-manager
status: {}
---
# Source: scorpioBroker/templates/subscription-manager-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    service: subscription-manager
  name: subscription-manager
  namespace: scorpio-test
spec:
  ports:
  - name: "2025"
    port: 2025
    targetPort: 2025
  selector:
    service: subscription-manager
status: {}
---
# Source: scorpioBroker/templates/atcontext-server-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: at-context-server
  name: at-context-server
  namespace: scorpio-test
spec:
  replicas: 1
  selector:
    matchLabels:
      service: at-context-server
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        service: at-context-server
    spec:
      containers:
      - image: ibn40/digitaltwin:AtContextServer_2.0.0-v2
        env:
          - name: KAFKA_ADVERTISED_HOST_NAME
            value: "kafka.kafka"
          - name: KAFKA_ADVERTISED_PORT
            value: "9092"
          - name: KAFKA_BOOTSTRAP
            value: "kafka.kafka"
          - name: KAFKA_BROKERS
            value: "kafka.kafka"
          - name: KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS
            value: "5000"
          - name: KAFKA_LOG_RETENTION_MS
            value: "10000"
          - name: KAFKA_PORT
            value: "9092"
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: "zookeeper:2181"
        imagePullPolicy: Always
        name: at-context-server
        ports:
        - containerPort: 27015
          protocol: TCP
        lifecycle:
           preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - curl -X PUT "http://eureka:8761/eureka/apps/ATCONTEXT-SERVER/$HOSTNAME:atcontext-server:27015/status?value=OUT_OF_SERVICE"
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - curl --silent http://localhost:27015/actuator/health | grep --quiet -e
              '^{\"status\"\:\"UP\".*}$'
          failureThreshold: 6
          initialDelaySeconds: 40
          periodSeconds: 10
        resources:
          {}
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      imagePullSecrets:
        - name: ibn40-fusionreadonly
status: {}
---
# Source: scorpioBroker/templates/config-server-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: config-server
  name: config-server
  namespace: scorpio-test
spec:
  replicas: 1
  selector:
    matchLabels:
      service: config-server
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        service: config-server
    spec:
      containers:
      - image: ibn40/digitaltwin:config-server_2.0.0-v2
        imagePullPolicy: Always
        name: config-server
        ports:
        - containerPort: 8888
          protocol: TCP
        lifecycle:
           preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - curl -X PUT "http://eureka:8761/eureka/apps/CONFIGSERVER/$HOSTNAME:configserver:8888/status?value=OUT_OF_SERVICE"
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - curl --silent http://localhost:8888/actuator/health | grep --quiet -e
              '^{\"status\"\:\"UP\".*}$'
          failureThreshold: 6
          initialDelaySeconds: 40
          periodSeconds: 10
        resources:
          {}
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      imagePullSecrets:
        - name: ibn40-fusionreadonly
status: {}
---
# Source: scorpioBroker/templates/entity-manager-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: entity-manager
  name: entity-manager
  namespace: scorpio-test
spec:
  replicas: 1
  selector:
    matchLabels:
      service: entity-manager
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        service: entity-manager
    spec:
      containers:
      - image: ibn40/digitaltwin:EntityManager_2.0.0-v2
        env:
          - name: KAFKA_ADVERTISED_HOST_NAME
            value: "kafka.kafka"
          - name: KAFKA_ADVERTISED_PORT
            value: "9092"
          - name: KAFKA_BOOTSTRAP
            value: "kafka.kafka"
          - name: KAFKA_BROKERS
            value: "kafka.kafka"
          - name: KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS
            value: "5000"
          - name: KAFKA_LOG_RETENTION_MS
            value: "10000"
          - name: KAFKA_PORT
            value: "9092"
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: "zookeeper:2181"
        imagePullPolicy: Always
        name: entity-manager
        ports:
        - containerPort: 1025
          protocol: TCP
        lifecycle:
           preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - curl -X PUT "http://eureka:8761/eureka/apps/ENTITY-MANAGER/$HOSTNAME:entity-manager:1025/status?value=OUT_OF_SERVICE"
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - curl --silent http://localhost:1025/actuator/health | grep --quiet -e
              '^{\"status\"\:\"UP\".*}$'
          failureThreshold: 6
          initialDelaySeconds: 40
          periodSeconds: 10
        resources:
          {}
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      imagePullSecrets:
        - name: ibn40-fusionreadonly
status: {}
---
# Source: scorpioBroker/templates/eureka-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: eureka
  name: eureka
  namespace: scorpio-test
spec:
  replicas: 1
  selector:
    matchLabels:
      service: eureka
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        service: eureka
    spec:
      containers:
      - image: ibn40/digitaltwin:eureka-server_2.0.0-v2
        imagePullPolicy: Always
        name: eureka
        ports:
        - containerPort: 8761
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - curl --silent http://localhost:8761/actuator/health | grep --quiet -e
              '^{\"status\"\:\"UP\".*}$'
          failureThreshold: 6
          initialDelaySeconds: 40
          periodSeconds: 10
        resources:
          {}
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      imagePullSecrets:
        - name: ibn40-fusionreadonly
status: {}
---
# Source: scorpioBroker/templates/gateway-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: gateway
  name: gateway
  namespace: scorpio-test
spec:
  replicas: 1
  selector:
    matchLabels:
      service: gateway
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        service: gateway
    spec:
      containers:
      - image: ibn40/digitaltwin:gateway_2.0.0-v2
        imagePullPolicy: Always
        name: gateway
        ports:
        - containerPort: 9090
          protocol: TCP
        lifecycle:
           preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - curl -X PUT "http://eureka:8761/eureka/apps/GATEWAY/$HOSTNAME:gateway:9090/status?value=OUT_OF_SERVICE"
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - curl --silent http://localhost:9090/actuator/health | grep --quiet -e
              '^{\"status\"\:\"UP\".*}$'
          failureThreshold: 6
          initialDelaySeconds: 40
          periodSeconds: 10
        resources:
          {}
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      imagePullSecrets:
        - name: ibn40-fusionreadonly
status: {}
---
# Source: scorpioBroker/templates/history-manager-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: history-manager
  name: history-manager
  namespace: scorpio-test
spec:
  replicas: 1
  selector:
    matchLabels:
      service: history-manager
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        service: history-manager
    spec:
      containers:
      - image: ibn40/digitaltwin:HistoryManager_2.0.0-v2
        env:
          - name: KAFKA_ADVERTISED_HOST_NAME
            value: "kafka.kafka"
          - name: KAFKA_ADVERTISED_PORT
            value: "9092"
          - name: KAFKA_BOOTSTRAP
            value: "kafka.kafka"
          - name: KAFKA_BROKERS
            value: "kafka.kafka"
          - name: KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS
            value: "5000"
          - name: KAFKA_LOG_RETENTION_MS
            value: "10000"
          - name: KAFKA_PORT
            value: "9092"
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: "zookeeper:2181"
        imagePullPolicy: Always
        name: history-manager
        ports:
        - containerPort: 1040
          protocol: TCP
        lifecycle:
           preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - curl -X PUT "http://eureka:8761/eureka/apps/HISTORY-MANAGER/$HOSTNAME:history-manager:1040/status?value=OUT_OF_SERVICE"
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - curl --silent http://localhost:1040/actuator/health | grep --quiet -e
              '^{\"status\"\:\"UP\".*}$'
          failureThreshold: 6
          initialDelaySeconds: 40
          periodSeconds: 10
        resources:
          {}
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
---
# Source: scorpioBroker/templates/postgres-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
      service: postgres
  name: postgres
  namespace: scorpio-test
spec:
  replicas: 1
  selector:
    matchLabels:
      service: postgres
  strategy: {}
  template:
    metadata:
      labels:
       service: postgres
    spec:
      containers:
      - env:
        - name: POSTGRES_DB
          value: ngb
        - name: POSTGRES_PASSWORD
          value: ngb
        - name: POSTGRES_USER
          value: ngb
        image: mdillon/postgis
        imagePullPolicy: ""
        name: postgres
        ports:
        - containerPort: 5432
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgredb
      hostname: postgres      # added new 
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgres-pv-claim
status: {}
---
# Source: scorpioBroker/templates/query-manager-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: query-manager
  name: query-manager
  namespace: scorpio-test
spec:
  replicas: 1
  selector:
    matchLabels:
      service: query-manager
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        service: query-manager
    spec:
      containers:
      - image: ibn40/digitaltwin:QueryManager_2.0.0-v2
        env:
          - name: KAFKA_ADVERTISED_HOST_NAME
            value: "kafka.kafka"
          - name: KAFKA_ADVERTISED_PORT
            value: "9092"
          - name: KAFKA_BOOTSTRAP
            value: "kafka.kafka"
          - name: KAFKA_BROKERS
            value: "kafka.kafka"
          - name: KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS
            value: "5000"
          - name: KAFKA_LOG_RETENTION_MS
            value: "10000"
          - name: KAFKA_PORT
            value: "9092"
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: "zookeeper:2181"
        imagePullPolicy: Always
        name: query-manager
        ports:
        - containerPort: 1026
          protocol: TCP
        lifecycle:
           preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - curl -X PUT "http://eureka:8761/eureka/apps/QUERY-MANAGER/$HOSTNAME:query-manager:1026/status?value=OUT_OF_SERVICE"
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - curl --silent http://localhost:1026/actuator/health | grep --quiet -e
              '^{\"status\"\:\"UP\".*}$'
          failureThreshold: 6
          initialDelaySeconds: 40
          periodSeconds: 10
        resources:
          {}
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      imagePullSecrets:
        - name: ibn40-fusionreadonly
status: {}
---
# Source: scorpioBroker/templates/registration-manager-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: registry-manager
  name: registry-manager
  namespace: scorpio-test
spec:
  replicas: 1
  selector:
    matchLabels:
      service: registry-manager
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        service: registry-manager
    spec:
      containers:
      - image: ibn40/digitaltwin:RegistryManager_2.0.0-v2
        env:
          - name: KAFKA_ADVERTISED_HOST_NAME
            value: "kafka.kafka"
          - name: KAFKA_ADVERTISED_PORT
            value: "9092"
          - name: KAFKA_BOOTSTRAP
            value: "kafka.kafka"
          - name: KAFKA_BROKERS
            value: "kafka.kafka"
          - name: KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS
            value: "5000"
          - name: KAFKA_LOG_RETENTION_MS
            value: "10000"
          - name: KAFKA_PORT
            value: "9092"
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: "zookeeper:2181"
        imagePullPolicy: Always
        name: registry-manager
        ports:
        - containerPort: 1030
          protocol: TCP
        lifecycle:
           preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - curl -X PUT "http://eureka:8761/eureka/apps/C-SOURCES/$HOSTNAME:c-sources:1030/status?value=OUT_OF_SERVICE"
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - curl --silent http://localhost:1030/actuator/health | grep --quiet -e
              '^{\"status\"\:\"UP\".*}$'
          failureThreshold: 6
          initialDelaySeconds: 40
          periodSeconds: 10
        resources:
          {}
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      imagePullSecrets:
        - name: ibn40-fusionreadonly
status: {}
---
# Source: scorpioBroker/templates/storage-manager-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: storage-manager
  name: storage-manager
  namespace: scorpio-test
spec:
  replicas: 1
  selector:
    matchLabels:
      service: storage-manager
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        service: storage-manager
    spec:
      containers:
      - image: ibn40/digitaltwin:StorageManager_2.0.0-v2
        env:
          - name: KAFKA_ADVERTISED_HOST_NAME
            value: "kafka.kafka"
          - name: KAFKA_ADVERTISED_PORT
            value: "9092"
          - name: KAFKA_BOOTSTRAP
            value: "kafka.kafka"
          - name: KAFKA_BROKERS
            value: "kafka.kafka"
          - name: KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS
            value: "5000"
          - name: KAFKA_LOG_RETENTION_MS
            value: "10000"
          - name: KAFKA_PORT
            value: "9092"
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: "zookeeper:2181"
        imagePullPolicy: Always
        name: storage-manager
        ports:
        - containerPort: 1029
          protocol: TCP
        lifecycle:
           preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - curl -X PUT "http://eureka:8761/eureka/apps/STORAGE-MANAGER/$HOSTNAME:storage-manager:1029/status?value=OUT_OF_SERVICE"
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - curl --silent http://localhost:1029/actuator/health | grep --quiet -e
              '^{\"status\"\:\"UP\".*}$'
          failureThreshold: 6
          initialDelaySeconds: 40
          periodSeconds: 10
        resources:
          {}
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      imagePullSecrets:
        - name: ibn40-fusionreadonly
status: {}
---
# Source: scorpioBroker/templates/subscription-manager-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: subscription-manager
  name: subscription-manager
  namespace: scorpio-test
spec:
  replicas: 1
  selector:
    matchLabels:
      service: subscription-manager
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        service: subscription-manager
    spec:
      containers:
      - image: ibn40/digitaltwin:SubscriptionManager_2.0.0-v2
        env:
          - name: KAFKA_ADVERTISED_HOST_NAME
            value: "kafka.kafka"
          - name: KAFKA_ADVERTISED_PORT
            value: "9092"
          - name: KAFKA_BOOTSTRAP
            value: "kafka.kafka"
          - name: KAFKA_BROKERS
            value: "kafka.kafka"
          - name: KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS
            value: "5000"
          - name: KAFKA_LOG_RETENTION_MS
            value: "10000"
          - name: KAFKA_PORT
            value: "9092"
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: "zookeeper:2181"
        imagePullPolicy: Always
        name: subscription-manager
        ports:
        - containerPort: 2025
          protocol: TCP
        lifecycle:
           preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - curl -X PUT "http://eureka:8761/eureka/apps/SUBSCRIPTION-MANAGER/$HOSTNAME:subscription-manager:2025/status?value=OUT_OF_SERVICE"
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - curl --silent http://localhost:2025/actuator/health | grep --quiet -e
              '^{\"status\"\:\"UP\".*}$'
          failureThreshold: 6
          initialDelaySeconds: 40
          periodSeconds: 10
        resources:
          {}
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      imagePullSecrets:
        - name: ibn40-fusionreadonly
status: {}
---
# Source: scorpioBroker/templates/atcontext-server-hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
 name: at-context-server-hpa
 namespace: scorpio-test
spec:
 scaleTargetRef:
   apiVersion: apps/v1
   kind: Deployment
   name: at-context-server
 minReplicas: 1
 maxReplicas: 5
 targetCPUUtilizationPercentage: 80
---
# Source: scorpioBroker/templates/config-server-hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
 name: config-server-hpa
 namespace: scorpio-test
spec:
 scaleTargetRef:
   apiVersion: apps/v1
   kind: Deployment
   name: config-server
 minReplicas: 1
 maxReplicas: 5
 targetCPUUtilizationPercentage: 80
---
# Source: scorpioBroker/templates/entity-manager-hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
 name: entity-manager-hpa
 namespace: scorpio-test
spec:
 scaleTargetRef:
   apiVersion: apps/v1
   kind: Deployment
   name: entity-manager
 minReplicas: 1
 maxReplicas: 5
 targetCPUUtilizationPercentage: 80
---
# Source: scorpioBroker/templates/eureka-server-hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
 name: eureka-hpa
 namespace: scorpio-test
spec:
 scaleTargetRef:
   apiVersion: apps/v1
   kind: Deployment
   name: eureka
 minReplicas: 1
 maxReplicas: 5
 targetCPUUtilizationPercentage: 80
---
# Source: scorpioBroker/templates/gateway-server-hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
 name: gateway-hpa
 namespace: scorpio-test
spec:
 scaleTargetRef:
   apiVersion: apps/v1
   kind: Deployment
   name: gateway
 minReplicas: 1
 maxReplicas: 5
 targetCPUUtilizationPercentage: 80
---
# Source: scorpioBroker/templates/history-manager-hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
 name: history-manager-hpa
 namespace: scorpio-test
spec:
 scaleTargetRef:
   apiVersion: apps/v1
   kind: Deployment
   name: history-manager
 minReplicas: 1
 maxReplicas: 5
 targetCPUUtilizationPercentage: 80
---
# Source: scorpioBroker/templates/query-manager-hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
 name: query-manager-hpa
 namespace: scorpio-test
spec:
 scaleTargetRef:
   apiVersion: apps/v1
   kind: Deployment
   name: query-manager
 minReplicas: 1
 maxReplicas: 5
 targetCPUUtilizationPercentage: 80
---
# Source: scorpioBroker/templates/registration-manager-hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
 name: registry-manager-hpa
 namespace: scorpio-test
spec:
 scaleTargetRef:
   apiVersion: apps/v1
   kind: Deployment
   name: registry-manager
 minReplicas: 1
 maxReplicas: 5
 targetCPUUtilizationPercentage: 80
---
# Source: scorpioBroker/templates/storage-manager-hpa.yml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
 name: storage-manager-hpa
 namespace: scorpio-test
spec:
 scaleTargetRef:
   apiVersion: apps/v1
   kind: Deployment
   name: storage-manager
 minReplicas: 1
 maxReplicas: 5
 targetCPUUtilizationPercentage: 80
---
# Source: scorpioBroker/templates/subscription-manager-hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
 name: subscription-manager-hpa
 namespace: scorpio-test
spec:
 scaleTargetRef:
   apiVersion: apps/v1
   kind: Deployment
   name: subscription-manager
 minReplicas: 1
 maxReplicas: 5
 targetCPUUtilizationPercentage: 80

